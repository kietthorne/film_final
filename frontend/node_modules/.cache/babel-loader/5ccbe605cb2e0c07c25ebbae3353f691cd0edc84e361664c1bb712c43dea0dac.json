{"ast":null,"code":"var _jsxFileName = \"D:\\\\destop\\\\film_test\\\\frontend\\\\src\\\\components\\\\BodyComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport MoviesList from \"./MovieList\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilmBodyComponent = () => {\n  _s();\n  const [films, setFilms] = useState([]);\n  const fetchFilms = useCallback(async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:3001/films');\n      setFilms(data);\n    } catch (error) {\n      console.error('Error fetching films:', error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchFilms();\n  }, [fetchFilms]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Featured Films\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), films.length > 0 ? /*#__PURE__*/_jsxDEV(MoviesList, {\n      films: films\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading films...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(FilmBodyComponent, \"AO7V+eNyGUKJkk57xS5bm1wIxbU=\");\n_c = FilmBodyComponent;\nexport default FilmBodyComponent;\nvar _c;\n$RefreshReg$(_c, \"FilmBodyComponent\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","axios","jsxDEV","_jsxDEV","FilmBodyComponent","_s","films","setFilms","fetchFilms","data","get","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/destop/film_test/frontend/src/components/BodyComponent.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport MoviesList from \"./MovieList\";\r\nimport axios from 'axios';\r\n\r\nconst FilmBodyComponent = () => {\r\n  const [films, setFilms] = useState([]);\r\n\r\n  const fetchFilms = useCallback(async () => {\r\n    try {\r\n      const { data } = await axios.get('http://localhost:3001/films');\r\n      setFilms(data);\r\n    } catch (error) {\r\n      console.error('Error fetching films:', error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchFilms();\r\n  }, [fetchFilms]);\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Featured Films</h2>\r\n      {films.length > 0 ? (\r\n        <MoviesList films={films} />\r\n      ) : (\r\n        <p>Loading films...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilmBodyComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,UAAU,GAAGX,WAAW,CAAC,YAAY;IACzC,IAAI;MACF,MAAM;QAAEY;MAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC;MAC/DH,QAAQ,CAACE,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACEL,OAAA;IAAKU,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBb,KAAK,CAACc,MAAM,GAAG,CAAC,gBACfjB,OAAA,CAACH,UAAU;MAACM,KAAK,EAAEA;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE5BhB,OAAA;MAAAY,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CA1BID,iBAAiB;AAAAiB,EAAA,GAAjBjB,iBAAiB;AA4BvB,eAAeA,iBAAiB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}